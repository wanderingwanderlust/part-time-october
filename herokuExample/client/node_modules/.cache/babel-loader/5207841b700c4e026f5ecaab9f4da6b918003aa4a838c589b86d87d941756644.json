{"ast":null,"code":"var _jsxFileName = \"/Users/gohan/Desktop/emeritus/part_time_august/part3/giphy/src/helpers/GifSearch.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GifViewer from \"./GifViewer\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GifSearch() {\n  _s();\n  const apiKey = '6HdufP6nLgDzMy9VoZFe9OdpCXZlAu7i';\n  // capture the user input from the search form\n  const [input, setInput] = useState('');\n  // handle the data that comes back from our giphy api\n  const [gifs, setGifs] = useState([]);\n  // savedGifs\n  // Pagination for Searched Gifs\n  const [paginateGifs, setPaginateGifs] = useState([]);\n\n  // pagination config values\n  const pageSize = 10;\n  const pageCount = Math.ceil(gifs.length / pageSize);\n  const [currentPage, setCurrentPage] = useState(0);\n  function handlePagination(e, index) {\n    e.preventDefault();\n    setCurrentPage(index);\n    slicedGifs(gifs);\n  }\n  const search = async event => {\n    // This will prevent the page from reloading when submit is clicked\n    event.preventDefault();\n    const res = await axios.get(`https://api.giphy.com/v1/gifs/search?q=${input}&api_key=${apiKey}&rating=g`);\n    console.log(res.data.data);\n    setGifs(res.data.data);\n    slicedGifs(res.data.data);\n    toast(`You have successfully searched for ${input}`);\n  };\n  function slicedGifs(gifs) {\n    const slicedGifs = gifs.slice(currentPage * pageSize, (currentPage + 1) * pageSize);\n    console.log('slicing', slicedGifs);\n    setPaginateGifs(slicedGifs);\n  }\n\n  // we will want to be able to save this data to a db, but for now localStorage\n  const save = gif_url => {\n    console.log(gif_url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Search for gifs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: search,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: input,\n          onChange: event => setInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Results for \", input, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        children: [/*#__PURE__*/_jsxDEV(PaginationItem, {\n          disabled: currentPage <= 0,\n          children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n            onClick: e => handlePagination(e, currentPage - 1),\n            previous: true,\n            href: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), [...Array(pageCount)].map((page, i) => /*#__PURE__*/_jsxDEV(PaginationItem, {\n          active: i === currentPage,\n          children: /*#__PURE__*/_jsxDEV(PaginationLink, {\n            onClick: e => handlePagination(e, i),\n            href: \"#\",\n            children: i + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GifViewer, {\n        gifs: paginateGifs,\n        buttonAction: save,\n        buttonText: 'Save Gif'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(GifSearch, \"AIo/3Lo65KVBQ3ba7QNklomWdvA=\");\n_c = GifSearch;\nexport default GifSearch;\nvar _c;\n$RefreshReg$(_c, \"GifSearch\");","map":{"version":3,"names":["useEffect","useState","Pagination","PaginationItem","PaginationLink","ToastContainer","toast","GifViewer","axios","jsxDEV","_jsxDEV","GifSearch","_s","apiKey","input","setInput","gifs","setGifs","paginateGifs","setPaginateGifs","pageSize","pageCount","Math","ceil","length","currentPage","setCurrentPage","handlePagination","e","index","preventDefault","slicedGifs","search","event","res","get","console","log","data","slice","save","gif_url","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","disabled","onClick","previous","href","Array","map","page","i","active","buttonAction","buttonText","_c","$RefreshReg$"],"sources":["/Users/gohan/Desktop/emeritus/part_time_august/part3/giphy/src/helpers/GifSearch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport GifViewer from \"./GifViewer\";\nimport axios from 'axios'\n\nfunction GifSearch() {\n    const apiKey = '6HdufP6nLgDzMy9VoZFe9OdpCXZlAu7i';\n    // capture the user input from the search form\n    const [input, setInput] = useState('');\n    // handle the data that comes back from our giphy api\n    const [gifs, setGifs] = useState([])\n    // savedGifs\n    // Pagination for Searched Gifs\n    const [paginateGifs, setPaginateGifs] = useState([])\n\n\n    // pagination config values\n    const pageSize = 10\n    const pageCount = Math.ceil(gifs.length / pageSize)\n    const [currentPage, setCurrentPage] = useState(0)\n\n    function handlePagination(e, index) {\n        e.preventDefault();\n        setCurrentPage(index)\n        slicedGifs(gifs)\n    }\n\n    const search = async(event) => {\n        // This will prevent the page from reloading when submit is clicked\n        event.preventDefault();\n\n        const res = await axios.get(`https://api.giphy.com/v1/gifs/search?q=${input}&api_key=${apiKey}&rating=g`)\n        console.log(res.data.data)\n        setGifs(res.data.data)\n        slicedGifs(res.data.data)\n        toast(`You have successfully searched for ${input}`)\n    }\n\n    function slicedGifs(gifs) {\n        const slicedGifs = gifs.slice(currentPage * pageSize, (currentPage + 1) * pageSize)\n        console.log('slicing', slicedGifs)\n        setPaginateGifs(slicedGifs)\n    }\n\n    // we will want to be able to save this data to a db, but for now localStorage\n    const save = (gif_url) => {\n        console.log(gif_url)\n    }\n\n\n    return (\n        <div className=\"container\">\n            <ToastContainer />\n            <div className=\"row\">\n                <h3>Search for gifs</h3>\n                <form onSubmit={search}>\n                    <input value={input} onChange={(event) => setInput(event.target.value)} />\n                    <button>Search</button>\n                </form>\n            </div>\n            <div className=\"row\">\n                <h3>Results for {input} </h3>\n\n                <Pagination>\n                    <PaginationItem disabled={currentPage <= 0}>\n                        <PaginationLink \n                            onClick={e => handlePagination(e, currentPage - 1)}\n                            previous\n                            href=\"#\"    \n                        />\n                        </PaginationItem>\n                        {[...Array(pageCount)].map((page, i) => \n                            <PaginationItem active={i === currentPage} key={i}>\n                                <PaginationLink onClick={e => handlePagination(e, i)} href=\"#\">\n                                    {i + 1}\n                                </PaginationLink>\n                            </PaginationItem>\n                        )}\n                </Pagination>\n\n                <GifViewer \n                    gifs={paginateGifs}\n                    buttonAction={save}\n                    buttonText={'Save Gif'}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default GifSearch"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}